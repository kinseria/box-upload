name: Upload files to Box using JWT auth

on:
  workflow_dispatch:

jobs:
  upload-to-box:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install pyjwt cryptography requests

      - name: Write Box JWT config file
        env:
          BOX_JWT_CONFIG_JSON: ${{ secrets.BOX_JWT_CONFIG_JSON }}
        run: |
          echo "$BOX_JWT_CONFIG_JSON" > box_jwt_config.json

      - name: Generate JWT access token
        id: generate_token
        run: |
          python <<EOF
          import json, time, jwt, requests
          from cryptography.hazmat.primitives import serialization
          from cryptography.hazmat.backends import default_backend

          # Load config
          with open("box_jwt_config.json") as f:
              config = json.load(f)

          client_id = config["boxAppSettings"]["clientID"]
          client_secret = config["boxAppSettings"]["clientSecret"]
          enterprise_id = config["enterpriseID"]
          private_key = config["boxAppSettings"]["appAuth"]["privateKey"]
          passphrase = config["boxAppSettings"]["appAuth"]["passphrase"].encode()
          public_key_id = config["boxAppSettings"]["appAuth"]["publicKeyID"]

          # Load private key
          key = serialization.load_pem_private_key(
              private_key.encode(),
              password=passphrase,
              backend=default_backend()
          )

          now = int(time.time())
          claims = {
              "iss": client_id,
              "sub": enterprise_id,
              "box_sub_type": "enterprise",
              "aud": "https://api.box.com/oauth2/token",
              "jti": f"{now}abc123",
              "exp": now + 60
          }

          jwt_token = jwt.encode(claims, key, algorithm="RS256", headers={"kid": public_key_id})

          token_url = "https://api.box.com/oauth2/token"
          headers = {"Content-Type": "application/x-www-form-urlencoded"}
          data = {
              "grant_type": "urn:ietf:params:oauth:grant-type:jwt-bearer",
              "client_id": client_id,
              "client_secret": client_secret,
              "assertion": jwt_token
          }

          response = requests.post(token_url, headers=headers, data=data)
          if response.status_code == 200:
              access_token = response.json().get("access_token")
              print(f"::set-output name=token::{access_token}")
          else:
              print("Failed to get token")
              print(response.status_code, response.text)
              exit(1)
          EOF

      - name: Upload example file to Box root folder (id 0)
        env:
          BOX_ACCESS_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "This file was uploaded by GitHub Actions" > example.txt

          response=$(curl -s -X POST https://upload.box.com/api/2.0/files/content \
            -H "Authorization: Bearer $BOX_ACCESS_TOKEN" \
            -F attributes='{"name":"20251010_110657.mp4", "parent":{"id":"0"}}' \
            -F file=@20251010_110657.mp4)

          echo "Upload response: $response"

          file_id=$(echo "$response" | jq -r '.entries[0].id')
          if [ "$file_id" = "null" ] || [ -z "$file_id" ]; then
            echo "❌ File upload failed"
            exit 1
          fi
          echo "✅ File uploaded successfully. File ID: $file_id"
